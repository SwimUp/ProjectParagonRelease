<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<RootNamespace>Proton</RootNamespace>
		<AssemblyName>Proton</AssemblyName>
		<TargetFramework>net472</TargetFramework>
		<LangVersion>8.0</LangVersion>
		<PlatformTarget>x64</PlatformTarget>
		<OutputPath>..\..\..\1.3\Plugins</OutputPath>
		<Optimize>true</Optimize>
		<DebugType>pdbonly</DebugType>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<ReleaseVersion>0.6.3</ReleaseVersion>
		<Configurations>Release;Debug</Configurations>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<OutputPath>..\..\1.3\Plugins\Stable</OutputPath>
		<DefineConstants>TRACE;NDEBUG</DefineConstants>
		<WarningLevel>4</WarningLevel>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<NoStdLib>true</NoStdLib>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<OutputPath>..\..\1.3\Plugins\Stable</OutputPath>
		<DefineConstants>TRACE;DEBUG</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<NoStdLib>true</NoStdLib>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Krafs.Rimworld.Ref" Version="1.3.3159" GeneratePathProperty="true" />
		<PackageReference Include="Lib.Harmony" Version="2.1.1" ExcludeAssets="runtime" />
		<PackageReference Include="Microsoft.NETCore.Platforms" Version="5.0.3" />
		<PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies.net472" Version="1.0.2">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="TaskPubliciser" Version="1.0.3" />
	</ItemGroup>
	<ItemGroup>
		<Folder Include="Core\" />
		<Folder Include="Core\Deprecated\" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\Cosmodrome\Cosmodrome.csproj" ExcludeAssets="runtime">
			<Private>False</Private>
		</ProjectReference>
	</ItemGroup>
	<ItemGroup>
		<None Remove="Core\Deprecated\" />
	</ItemGroup>
	<ItemGroup>
		<Compile Remove="Core\Deprecated\GlowFlooder_Patch.cs" />
		<Compile Remove="Core\Deprecated\GlowGrid_Patch.cs" />
		<Compile Remove="Core\Deprecated\LitCell.cs" />
		<Compile Remove="Core\Deprecated\LitGlowerCacher.cs" />
		<Compile Remove="Core\Deprecated\LitGlowerInfo.cs" />
		<Compile Remove="Core\Deprecated\MapGlowerUtility.cs" />
	</ItemGroup>
	<ItemGroup>
		<None Include="Core\Deprecated\GlowFlooder_Patch.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
		<None Include="Core\Deprecated\GlowGrid_Patch.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
		<None Include="Core\Deprecated\LitCell.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
		<None Include="Core\Deprecated\LitGlowerCacher.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
		<None Include="Core\Deprecated\LitGlowerInfo.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
		<None Include="Core\Deprecated\MapGlowerUtility.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
	</ItemGroup>
	<Target Name="Publicise" BeforeTargets="UpdateReferences" Condition="!Exists('$(PkgKrafs_Rimworld_Ref)\ref\net472\Assembly-CSharp_publicised.dll')">
		<!-- Set our variables -->
		<PropertyGroup>
			<AssemblyCSharp>$(PkgKrafs_Rimworld_Ref)\ref\net472\Assembly-CSharp.dll</AssemblyCSharp>
			<Unity_CoreModule>$(PkgKrafs_Rimworld_Ref)\ref\net472\UnityEngine.CoreModule.dll</Unity_CoreModule>
			<PubliciseOutputPath>$(PkgKrafs_Rimworld_Ref)\ref\net472\</PubliciseOutputPath>
			<AssemblyCSharp_Publicised>$(PubliciseOutputPath)Assembly-CSharp_publicised.dll</AssemblyCSharp_Publicised>
			<Unity_CoreModule_Publicised>$(PubliciseOutputPath)UnityEngine.CoreModule_publicised.dll</Unity_CoreModule_Publicised>
		</PropertyGroup>
		<!-- Publicise the dlls (if required) -->
		<Message Importance="High" Text="Publicising Rimworld Assembly ..." />
		<Publicise TargetAssemblyPath="$(AssemblyCSharp)" OutputPath="$(PubliciseOutputPath)" Condition="Exists('$(AssemblyCSharp)')" />
		<Publicise TargetAssemblyPath="$(Unity_CoreModule)" OutputPath="$(PubliciseOutputPath)" Condition="Exists('$(Unity_CoreModule)')" />
		<!-- Add references to the new publicised dlls -->
		<Message Importance="High" Text="Replacing reference to un-publicised assemblies with publicised equivalents ..." />
	</Target>
	<Target Name="AddRefrences" BeforeTargets="UpdateReferences" AfterTargets="Publicise">
		<!-- Set our variables -->
		<PropertyGroup>
			<AssemblyCSharp>$(PkgKrafs_Rimworld_Ref)\ref\net472\Assembly-CSharp.dll</AssemblyCSharp>
			<Unity_CoreModule>$(PkgKrafs_Rimworld_Ref)\ref\net472\UnityEngine.CoreModule.dll</Unity_CoreModule>
			<PubliciseOutputPath>$(PkgKrafs_Rimworld_Ref)\ref\net472\</PubliciseOutputPath>
			<AssemblyCSharp_Publicised>$(PubliciseOutputPath)Assembly-CSharp_publicised.dll</AssemblyCSharp_Publicised>
			<Unity_CoreModule_Publicised>$(PubliciseOutputPath)UnityEngine.CoreModule_publicised.dll</Unity_CoreModule_Publicised>
		</PropertyGroup>
		<!-- Publicise the dlls (if required) -->
		<ItemGroup>
			<Reference Include="$(AssemblyCSharp_Publicised)">
				<SpecificVersion>false</SpecificVersion>
				<HintPath>$(AssemblyCSharp_Publicised)</HintPath>
				<Implicit>true</Implicit>
				<Private>false</Private>
			</Reference>
			<Reference Include="$(Unity_CoreModule_Publicised)">
				<SpecificVersion>false</SpecificVersion>
				<HintPath>$(Unity_CoreModule_Publicised)</HintPath>
				<Implicit>true</Implicit>
				<Private>false</Private>
			</Reference>
		</ItemGroup>
	</Target>
	<Target Name="UpdateReferences" AfterTargets="ResolveLockFileReferences">
		<Message Importance="High" Text="Remove References at ($(PkgKrafs_Rimworld_Ref))" />
		<ItemGroup>
			<Reference Remove="$(PkgKrafs_Rimworld_Ref)\ref\net472\Assembly-CSharp.dll" />
			<Reference Remove="$(PkgKrafs_Rimworld_Ref)\ref\net472\UnityEngine.CoreModule.dll" />
		</ItemGroup>
	</Target>
	<ProjectExtensions>
	  <MonoDevelop>
	    <Properties>
	      <Policies>
	        <StandardHeader Text="&#xA;${FileName}&#xA; &#xA;Author:&#xA;      ${AuthorName} &lt;${AuthorEmail}&gt;&#xA;&#xA;Copyright (c) ${Year} ${CopyrightHolder}&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &quot;Software&quot;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in&#xA;all copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#xA;THE SOFTWARE." IncludeInNewFiles="False" />
	      </Policies>
	    </Properties>
	  </MonoDevelop>
	</ProjectExtensions>
</Project>